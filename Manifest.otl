Appendixie
TODO Actions
	[_] Journal
		[_] free form journaling
			[_] add update_journal command
		[_] Autojournaling
			add methods
			determine which commands and actions will trigger auto-journal
		Journal parsing
			collect actions into a "day"
			add filters to read journal
				by date
				by zone
		Zoning
			see zone feature request
		Journal Script 
			: Is it a script? What else. Could be an character.db.object
			at character creation db.journal = ()
			commands go in the character typeclass
	[_] Evil links
		: opportunity to link doors and passages to eachother - @tun and @door
		: commands each generate a "new" room
		: upon editing/building rooms are usually renamed. The plan is to
		: program an option to link "new rooms" with other "new rooms" on
		: creation ... also occasionally link via secret or one-way door to
		: previously built rooms.
	[_] Play Stormer help:
		: Mostly just helpful prompts to let them play how I've already been
		: playing.
		: But also some critical tools like the editor
		[_] Start comand
			: instructions to please start by digging an exit with your own
			: name to your first room. Then start on Table V.
		[X] Some Place desc
			: let the default text of a tun destination be a reminder to roll
			: on Table I
	[_] Automagic:
Feature Requests:
	Zones
		: Use tags to create dungeon zones.  Presently, Player made dungeons
		: chould have their own name.
	Menus for Tables
		: This would replace or be an alternative to the table commands,
		: instead of passing arguments to table, the command would open up a
		: menu that let you choose from the tables. Ideal for leading ppl
		: through the various linked tables. BUT... difficult with manual
		: building.
	Building Commands/guide
		: Add a building command field to each table result, So that after
		: rolling. The table would suggest an Evennia building command and
		: proper arguments to implement the suggestion from the table.
	Auto-build prompt
		: When showing the suggested command, prompt the player to accept the
		: suggestion, implementing it
		: immediately.commands.default.muxcommand.MuxCommand. 
	Direction Translation
		left right 
		: each exit has a direction  and upon passing through - the player is
		: aligned that way.  Then left, right, fwd and behind ... are all
		: relative.
	Lookable exits
		: looking at an exit should return a description (possibly brief
		: version) of the destination room.
	Menus
		New-room triggers menus - contextualize it all
			: so entering a "new room" will automatically roll on the
			: appropriate table
	Monsters
		copy the demo NPC?
		: I think it is able to follow the PC and attack until you die. Death
		: transports you to the cave.
	Combat RP
		Invenet a combat system that uses narrative rp
		subportinate to Journalling
	Magic System?
		RP based magic? Can it work?
		subportinate to Journalling
Done Actions
	[X] Die roller
		: works as ordered!
	[X] Tables
		: All the Appendix A tables are now available in game with the 
		: "table" command. It is possible to override the die roll in advance.
		: Another interesting over ride would be to simply print out every
		: result.
	[X] General Help
		: help via a command
	[X] Enable Editor in several commands.
		: either overload desc maybe by adding a switch, or create a
		: ans @edesc command to "edit descriptions"
		Actually that was built in by default to desc
	[X] Doors
		: Doors can be places with @tun/door of @door command.
		: This creates an exit which can be openned of closed. I cannot be
		: traversed unless open. The problem is that the commands only work on
		: one side of the door at a time. To fix this I belive I have to
		: rewrite the @tunnel command to use create_exit and link the two
		: sides of the door (two diff exits) at creation time.
		[X] plan - rebuild my @tunnel command
			: so that it can set attributes at start time.
Post Appendixie
	: Down the road I'd like to transition to a new game based on this idea
	: of random building and adventuring in tandem.
talk is cheap
	LIMBO
		not the boring place where babies and old men go..
		but the crazy chaotic land as described by TSR
		Pandemonium sounds good too.
	New objects
		new_exit
			: new_exits are objects that look like exits until traversed, then
			: they will spawn a random node
			: new_exits have attributes which dictate constraints on the
			: random node.
		random_node
			: random nodes are created  following the constraints set by the
			: new_exit that called it.
			: note: random_nodes will typically have at least one normal exit
			: (linking back through the new-exit that called it) and zero or
			: more new new_exits
			:wq
			:
	POC
		: The simplest proof of concept has to be a random room generating
		: script DungeonMaster like Griatch suggested - table 1 perhaps?
		: I don't know. Nothing is easy.
		:
		: Perhaps the first step is simply to to a cardinal direction
		: generator.
		:
		: Not really, exits are the first step
	Exits and Doors
		: All movement in this Evennia dungeon is conducted via exit objects.
		: So, probably all the random rolls will occur within exit objects.
		: So the game will be based around a custom exit typeclass.
		:
		: Perhaps the exit triggers a builder bot that populates new rooms
		: with random features including of course additional special exits
		: etc.
		:
		: No need a new object type - that looks like an exit or a room but
		: triggers the correct 
